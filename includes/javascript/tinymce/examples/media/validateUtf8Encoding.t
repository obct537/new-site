<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Apache Portable Runtime: apr_general.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<h1>apr_general.h</h1><a href="apr__general_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* Licensed to the Apache Software Foundation (ASF) under one or more</span>
<a name="l00002"></a>00002 <span class="comment"> * contributor license agreements.  See the NOTICE file distributed with</span>
<a name="l00003"></a>00003 <span class="comment"> * this work for additional information regarding copyright ownership.</span>
<a name="l00004"></a>00004 <span class="comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span>
<a name="l00005"></a>00005 <span class="comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span>
<a name="l00006"></a>00006 <span class="comment"> * the License.  You may obtain a copy of the License at</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00009"></a>00009 <span class="comment"> *</span>
<a name="l00010"></a>00010 <span class="comment"> * Unless required by applicable law or agreed to in writing, software</span>
<a name="l00011"></a>00011 <span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00013"></a>00013 <span class="comment"> * See the License for the specific language governing permissions and</span>
<a name="l00014"></a>00014 <span class="comment"> * limitations under the License.</span>
<a name="l00015"></a>00015 <span class="comment"> */</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="preprocessor">#ifndef APR_GENERAL_H</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span><span class="preprocessor">#define APR_GENERAL_H</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00020"></a>00020 <span class="comment">/**</span>
<a name="l00021"></a>00021 <span class="comment"> * @file apr_general.h</span>
<a name="l00022"></a>00022 <span class="comment"> * This is collection of oddballs that didn&#39;t fit anywhere else,</span>
<a name="l00023"></a>00023 <span class="comment"> * and might move to more appropriate headers with the release</span>
<a name="l00024"></a>00024 <span class="comment"> * of APR 1.0.</span>
<a name="l00025"></a>00025 <span class="comment"> * @brief APR Miscellaneous library routines</span>
<a name="l00026"></a>00026 <span class="comment"> */</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="apr_8h.html" title="APR Platform Definitions.">apr.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="apr__pools_8h.html" title="APR memory allocation.">apr_pools.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="apr__errno_8h.html" title="APR Error Codes.">apr_errno.h</a>&quot;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#if APR_HAVE_SIGNAL_H</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span><span class="preprocessor">#include &lt;signal.h&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#endif</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span>
<a name="l00036"></a>00036 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {
<a name="l00038"></a>00038 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l00039"></a>00039 <span class="comment"></span>
<a name="l00040"></a>00040 <span class="comment">/**</span>
<a name="l00041"></a>00041 <span class="comment"> * @defgroup apr_general Miscellaneous library routines</span>
<a name="l00042"></a>00042 <span class="comment"> * @ingroup APR </span>
<a name="l00043"></a>00043 <span class="comment"> * This is collection of oddballs that didn&#39;t fit anywhere else,</span>
<a name="l00044"></a>00044 <span class="comment"> * and might move to more appropriate headers with the release</span>
<a name="l00045"></a>00045 <span class="comment"> * of APR 1.0.</span>
<a name="l00046"></a>00046 <span class="comment"> * @{</span>
<a name="l00047"></a>00047 <span class="comment"> */</span>
<a name="l00048"></a>00048 <span class="comment"></span>
<a name="l00049"></a>00049 <span class="comment">/** FALSE */</span>
<a name="l00050"></a>00050 <span class="preprocessor">#ifndef FALSE</span>
<a name="l00051"></a><a class="code" href="group__apr__general.html#gaa93f0eb578d23995850d61f7d61c55c1">00051</a> <span class="preprocessor"></span><span class="preprocessor">#define FALSE 0</span>
<a name="l00052"></a>00052 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00053"></a>00053 <span class="preprocessor"></span><span class="comment">/** TRUE */</span>
<a name="l00054"></a>00054 <span class="preprocessor">#ifndef TRUE</span>
<a name="l00055"></a><a class="code" href="group__apr__general.html#gaa8cecfc5c5c054d2875c03e77b7be15d">00055</a> <span class="preprocessor"></span><span class="preprocessor">#define TRUE (!FALSE)</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00058"></a>00058 <span class="comment">/** a space */</span>
<a name="l00059"></a><a class="code" href="group__apr__general.html#ga60fc208d93123acc7cf915a66e49e654">00059</a> <span class="preprocessor">#define APR_ASCII_BLANK  &#39;\040&#39;</span>
<a name="l00060"></a>00060 <span class="preprocessor"></span><span class="comment">/** a carrige return */</span>
<a name="l00061"></a><a class="code" href="group__apr__general.html#ga91c14ef7f03e82c07f4d3d56f63f8b6a">00061</a> <span class="preprocessor">#define APR_ASCII_CR     &#39;\015&#39;</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span><span class="comment">/** a line feed */</span>
<a name="l00063"></a><a class="code" href="group__apr__general.html#ga9e76601cef56a7a5b25f73fe6d57d7d9">00063</a> <span class="preprocessor">#define APR_ASCII_LF     &#39;\012&#39;</span>
<a name="l00064"></a>00064 <span class="preprocessor"></span><span class="comment">/** a tab */</span>
<a name="l00065"></a><a class="code" href="group__apr__general.html#gac7162c0b5d026a0717aaa98bf581349d">00065</a> <span class="preprocessor">#define APR_ASCII_TAB    &#39;\011&#39;</span>
<a name="l00066"></a>00066 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00067"></a>00067 <span class="comment">/** signal numbers typedef */</span>
<a name="l00068"></a><a class="code" href="group__apr__general.html#gafe9e657d61b61d62ecba34299a82a7ea">00068</a> <span class="keyword">typedef</span> <span class="keywordtype">int</span>               <a class="code" href="group__apr__general.html#gafe9e657d61b61d62ecba34299a82a7ea">apr_signum_t</a>;
<a name="l00069"></a>00069 <span class="comment"></span>
<a name="l00070"></a>00070 <span class="comment">/**</span>
<a name="l00071"></a>00071 <span class="comment"> * Finding offsets of elements within structures.</span>
<a name="l00072"></a>00072 <span class="comment"> * Taken from the X code... they&#39;ve sweated portability of this stuff</span>
<a name="l00073"></a>00073 <span class="comment"> * so we don&#39;t have to.  Sigh...</span>
<a name="l00074"></a>00074 <span class="comment"> * @param p_type pointer type name</span>
<a name="l00075"></a>00075 <span class="comment"> * @param field  data field within the structure pointed to</span>
<a name="l00076"></a>00076 <span class="comment"> * @return offset</span>
<a name="l00077"></a>00077 <span class="comment"> */</span>
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 <span class="preprocessor">#if defined(CRAY) || (defined(__arm) &amp;&amp; !defined(LINUX))</span>
<a name="l00080"></a>00080 <span class="preprocessor"></span><span class="preprocessor">#ifdef __STDC__</span>
<a name="l00081"></a>00081 <span class="preprocessor"></span><span class="preprocessor">#define APR_OFFSET(p_type,field) _Offsetof(p_type,field)</span>
<a name="l00082"></a>00082 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00083"></a>00083 <span class="preprocessor"></span><span class="preprocessor">#ifdef CRAY2</span>
<a name="l00084"></a>00084 <span class="preprocessor"></span><span class="preprocessor">#define APR_OFFSET(p_type,field) \</span>
<a name="l00085"></a>00085 <span class="preprocessor">        (sizeof(int)*((unsigned int)&amp;(((p_type)NULL)-&gt;field)))</span>
<a name="l00086"></a>00086 <span class="preprocessor"></span>
<a name="l00087"></a>00087 <span class="preprocessor">#else </span><span class="comment">/* !CRAY2 */</span>
<a name="l00088"></a>00088 
<a name="l00089"></a>00089 <span class="preprocessor">#define APR_OFFSET(p_type,field) ((unsigned int)&amp;(((p_type)NULL)-&gt;field))</span>
<a name="l00090"></a>00090 <span class="preprocessor"></span>
<a name="l00091"></a>00091 <span class="preprocessor">#endif </span><span class="comment">/* !CRAY2 */</span>
<a name="l00092"></a>00092 <span class="preprocessor">#endif </span><span class="comment">/* __STDC__ */</span>
<a name="l00093"></a>00093 <span class="preprocessor">#else </span><span class="comment">/* ! (CRAY || __arm) */</span>
<a name="l00094"></a>00094 
<a name="l00095"></a><a class="code" href="group__apr__general.html#ga41e537d6ad732766d12cd4eb61531678">00095</a> <span class="preprocessor">#define APR_OFFSET(p_type,field) \</span>
<a name="l00096"></a>00096 <span class="preprocessor">        ((long) (((char *) (&amp;(((p_type)NULL)-&gt;field))) - ((char *) NULL)))</span>
<a name="l00097"></a>00097 <span class="preprocessor"></span>
<a name="l00098"></a>00098 <span class="preprocessor">#endif </span><span class="comment">/* !CRAY */</span>
<a name="l00099"></a>00099 <span class="comment"></span>
<a name="l00100"></a>00100 <span class="comment">/**</span>
<a name="l00101"></a>00101 <span class="comment"> * Finding offsets of elements within structures.</span>
<a name="l00102"></a>00102 <span class="comment"> * @param s_type structure type name</span>
<a name="l00103"></a>00103 <span class="comment"> * @param field  data field within the structure</span>
<a name="l00104"></a>00104 <span class="comment"> * @return offset</span>
<a name="l00105"></a>00105 <span class="comment"> */</span>
<a name="l00106"></a>00106 <span class="preprocessor">#if defined(offsetof) &amp;&amp; !defined(__cplusplus)</span>
<a name="l00107"></a>00107 <span class="preprocessor"></span><span class="preprocessor">#define APR_OFFSETOF(s_type,field) offsetof(s_type,field)</span>
<a name="l00108"></a>00108 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00109"></a><a class="code" href="group__apr__general.html#gac16b1187b6ea63706c5dd48c88323dec">00109</a> <span class="preprocessor"></span><span class="preprocessor">#define APR_OFFSETOF(s_type,field) APR_OFFSET(s_type*,field)</span>
<a name="l00110"></a>00110 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00111"></a>00111 <span class="preprocessor"></span>
<a name="l00112"></a>00112 <span class="preprocessor">#ifndef DOXYGEN</span>
<a name="l00113"></a>00113 <span class="preprocessor"></span>
<a name="l00114"></a>00114 <span class="comment">/* A couple of prototypes for functions in case some platform doesn&#39;t </span>
<a name="l00115"></a>00115 <span class="comment"> * have it</span>
<a name="l00116"></a>00116 <span class="comment"> */</span>
<a name="l00117"></a>00117 <span class="preprocessor">#if (!APR_HAVE_STRCASECMP) &amp;&amp; (APR_HAVE_STRICMP) </span>
<a name="l00118"></a>00118 <span class="preprocessor"></span><span class="preprocessor">#define strcasecmp(s1, s2) stricmp(s1, s2)</span>
<a name="l00119"></a>00119 <span class="preprocessor"></span><span class="preprocessor">#elif (!APR_HAVE_STRCASECMP)</span>
<a name="l00120"></a>00120 <span class="preprocessor"></span><span class="keywordtype">int</span> strcasecmp(<span class="keyword">const</span> <span class="keywordtype">char</span> *a, <span class="keyword">const</span> <span class="keywordtype">char</span> *b);
<a name="l00121"></a>00121 <span class="preprocessor">#endif</span>
<a name="l00122"></a>00122 <span class="preprocessor"></span>
<a name="l00123"></a>00123 <span class="preprocessor">#if (!APR_HAVE_STRNCASECMP) &amp;&amp; (APR_HAVE_STRNICMP)</span>
<a name="l00124"></a>00124 <span class="preprocessor"></span><span class="preprocessor">#define strncasecmp(s1, s2, n) strnicmp(s1, s2, n)</span>
<a name="l00125"></a>00125 <span class="preprocessor"></span><span class="preprocessor">#elif (!APR_HAVE_STRNCASECMP)</span>
<a name="l00126"></a>00126 <span class="preprocessor"></span><span class="keywordtype">int</span> strncasecmp(<span class="keyword">const</span> <span class="keywordtype">char</span> *a, <span class="keyword">const</span> <span class="keywordtype">char</span> *b, <span class="keywordtype">size_t</span> n);
<a name="l00127"></a>00127 <span class="preprocessor">#endif</span>
<a name="l00128"></a>00128 <span class="preprocessor"></span>
<a name="l00129"></a>00129 <span class="preprocessor">#endif</span>
<a name="l00130"></a>00130 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00131"></a>00131 <span class="comment">/**</span>
<a name="l00132"></a>00132 <span class="comment"> * Alignment macros</span>
<a name="l00133"></a>00133 <span class="comment"> */</span>
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="comment">/* APR_ALIGN() is only to be used to align on a power of 2 boundary */</span>
<a name="l00136"></a><a class="code" href="group__apr__general.html#ga3c4f50d14ebe7a6add282d879521d552">00136</a> <span class="preprocessor">#define APR_ALIGN(size, boundary) \</span>
<a name="l00137"></a>00137 <span class="preprocessor">    (((size) + ((boundary) - 1)) &amp; ~((boundary) - 1))</span>
<a name="l00138"></a>00138 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00139"></a>00139 <span class="comment">/** Default alignment */</span>
<a name="l00140"></a><a class="code" href="group__apr__general.html#gab484e98426221f3212fcb67af0467381">00140</a> <span class="preprocessor">#define APR_ALIGN_DEFAULT(size) APR_ALIGN(size, 8)</span>
<a name="l00141"></a>00141 <span class="preprocessor"></span>
<a name="l00142"></a>00142 <span class="comment"></span>
<a name="l00143"></a>00143 <span class="comment">/**</span>
<a name="l00144"></a>00144 <span class="comment"> * String and memory functions</span>
<a name="l00145"></a>00145 <span class="comment"> */</span>
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 <span class="comment">/* APR_STRINGIFY is defined here, and also in apr_release.h, so wrap it */</span>
<a name="l00148"></a>00148 <span class="preprocessor">#ifndef APR_STRINGIFY</span>
<a name="l00149"></a>00149 <span class="preprocessor"></span><span class="comment">/** Properly quote a value as a string in the C preprocessor */</span>
<a name="l00150"></a><a class="code" href="group__apr__general.html#gae90215615972dfa4108018304361ef0b">00150</a> <span class="preprocessor">#define APR_STRINGIFY(n) APR_STRINGIFY_HELPER(n)</span>
<a name="l00151"></a>00151 <span class="preprocessor"></span><span class="comment">/** Helper macro for APR_STRINGIFY */</span>
<a name="l00152"></a><a class="code" href="group__apr__general.html#ga71918dd8c53e093283b43b0ff0965439">00152</a> <span class="preprocessor">#define APR_STRINGIFY_HELPER(n) #n</span>
<a name="l00153"></a>00153 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00154"></a>00154 <span class="preprocessor"></span>
<a name="l00155"></a>00155 <span class="preprocessor">#if (!APR_HAVE_MEMMOVE)</span>
<a name="l00156"></a>00156 <span class="preprocessor"></span><span class="preprocessor">#define memmove(a,b,c) bcopy(b,a,c)</span>
<a name="l00157"></a>00157 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00158"></a>00158 <span class="preprocessor"></span>
<a name="l00159"></a>00159 <span class="preprocessor">#if (!APR_HAVE_MEMCHR)</span>
<a name="l00160"></a>00160 <span class="preprocessor"></span><span class="keywordtype">void</span> *memchr(<span class="keyword">const</span> <span class="keywordtype">void</span> *s, <span class="keywordtype">int</span> c, <span class="keywordtype">size_t</span> n);
<a name="l00161"></a>00161 <span class="preprocessor">#endif</span>
<a name="l00162"></a>00162 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00163"></a>00163 <span class="comment">/** @} */</span>
<a name="l00164"></a>00164 <span class="comment"></span>
<a name="l00165"></a>00165 <span class="comment">/**</span>
<a name="l00166"></a>00166 <span class="comment"> * @defgroup apr_library Library initialization and termination</span>
<a name="l00167"></a>00167 <span class="comment"> * @{</span>
<a name="l00168"></a>00168 <span class="comment"> */</span>
<a name="l00169"></a>00169 <span class="comment"></span>
<a name="l00170"></a>00170 <span class="comment">/**</span>
<a name="l00171"></a>00171 <span class="comment"> * Setup any APR internal data structures.  This MUST be the first function </span>
<a name="l00172"></a>00172 <span class="comment"> * called for any APR library.</span>
<a name="l00173"></a>00173 <span class="comment"> * @remark See apr_app_initialize if this is an application, rather than</span>
<a name="l00174"></a>00174 <span class="comment"> * a library consumer of apr.</span>
<a name="l00175"></a>00175 <span class="comment"> */</span>
<a name="l00176"></a>00176 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__library.html#ga4a91a6b9ff457ead13e670950127761a">apr_initialize</a>(<span class="keywordtype">void</span>);
<a name="l00177"></a>00177 <span class="comment"></span>
<a name="l00178"></a>00178 <span class="comment">/**</span>
<a name="l00179"></a>00179 <span class="comment"> * Set up an application with normalized argc, argv (and optionally env) in</span>
<a name="l00180"></a>00180 <span class="comment"> * order to deal with platform-specific oddities, such as Win32 services,</span>
<a name="l00181"></a>00181 <span class="comment"> * code pages and signals.  This must be the first function called for any</span>
<a name="l00182"></a>00182 <span class="comment"> * APR program.</span>
<a name="l00183"></a>00183 <span class="comment"> * @param argc Pointer to the argc that may be corrected</span>
<a name="l00184"></a>00184 <span class="comment"> * @param argv Pointer to the argv that may be corrected</span>
<a name="l00185"></a>00185 <span class="comment"> * @param env Pointer to the env that may be corrected, may be NULL</span>
<a name="l00186"></a>00186 <span class="comment"> * @remark See apr_initialize if this is a library consumer of apr.</span>
<a name="l00187"></a>00187 <span class="comment"> * Otherwise, this call is identical to apr_initialize, and must be closed</span>
<a name="l00188"></a>00188 <span class="comment"> * with a call to apr_terminate at the end of program execution.</span>
<a name="l00189"></a>00189 <span class="comment"> */</span>
<a name="l00190"></a>00190 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__library.html#gaa1c4fc2e1c814cc5d4cd3d8719288fc9">apr_app_initialize</a>(<span class="keywordtype">int</span> *argc, 
<a name="l00191"></a>00191                                              <span class="keywordtype">char</span> const * const * *argv, 
<a name="l00192"></a>00192                                              <span class="keywordtype">char</span> const * const * *env);
<a name="l00193"></a>00193 <span class="comment"></span>
<a name="l00194"></a>00194 <span class="comment">/**</span>
<a name="l00195"></a>00195 <span class="comment"> * Tear down any APR internal data structures which aren&#39;t torn down </span>
<a name="l00196"></a>00196 <span class="comment"> * automatically.</span>
<a name="l00197"></a>00197 <span class="comment"> * @remark An APR program must call this function at termination once it </span>
<a name="l00198"></a>00198 <span class="comment"> *         has stopped using APR services.  The APR developers suggest using</span>
<a name="l00199"></a>00199 <span class="comment"> *         atexit to ensure this is called.  When using APR from a language</span>
<a name="l00200"></a>00200 <span class="comment"> *         other than C that has problems with the calling convention, use</span>
<a name="l00201"></a>00201 <span class="comment"> *         apr_terminate2() instead.</span>
<a name="l00202"></a>00202 <span class="comment"> */</span>
<a name="l00203"></a>00203 <a class="code" href="group__apr__platform.html#ga3ad5e45fabbda0ec5f106c334f1a0ae5">APR_DECLARE_NONSTD</a>(<span class="keywordtype">void</span>) <a class="code" href="group__apr__library.html#ga8e96d45ee09fc7e7eb3646efef1424a3">apr_terminate</a>(<span class="keywordtype">void</span>);
<a name="l00204"></a>00204 <span class="comment"></span>
<a name="l00205"></a>00205 <span class="comment">/**</span>
<a name="l00206"></a>00206 <span class="comment"> * Tear down any APR internal data structures which aren&#39;t torn down </span>
<a name="l00207"></a>00207 <span class="comment"> * automatically, same as apr_terminate</span>
<a name="l00208"></a>00208 <span class="comment"> * @remark An APR program must call either the apr_terminate or apr_terminate2 </span>
<a name="l00209"></a>00209 <span class="comment"> *         function once it it has finished using APR services.  The APR </span>
<a name="l00210"></a>00210 <span class="comment"> *         developers suggest using atexit(apr_terminate) to ensure this is done.</span>
<a name="l00211"></a>00211 <span class="comment"> *         apr_terminate2 exists to allow non-c language apps to tear down apr, </span>
<a name="l00212"></a>00212 <span class="comment"> *         while apr_terminate is recommended from c language applications.</span>
<a name="l00213"></a>00213 <span class="comment"> */</span>
<a name="l00214"></a>00214 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<span class="keywordtype">void</span>) <a class="code" href="group__apr__library.html#ga18667a60ff34d6209e519b4a4ce8cad1">apr_terminate2</a>(<span class="keywordtype">void</span>);
<a name="l00215"></a>00215 <span class="comment"></span>
<a name="l00216"></a>00216 <span class="comment">/** @} */</span>
<a name="l00217"></a>00217 <span class="comment"></span>
<a name="l00218"></a>00218 <span class="comment">/**</span>
<a name="l00219"></a>00219 <span class="comment"> * @defgroup apr_random Random Functions</span>
<a name="l00220"></a>00220 <span class="comment"> * @{</span>
<a name="l00221"></a>00221 <span class="comment"> */</span>
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 <span class="preprocessor">#if APR_HAS_RANDOM || defined(DOXYGEN)</span>
<a name="l00224"></a>00224 <span class="preprocessor"></span>
<a name="l00225"></a>00225 <span class="comment">/* TODO: I&#39;m not sure this is the best place to put this prototype...*/</span><span class="comment"></span>
<a name="l00226"></a>00226 <span class="comment">/**</span>
<a name="l00227"></a>00227 <span class="comment"> * Generate random bytes.</span>
<a name="l00228"></a>00228 <span class="comment"> * @param buf Buffer to fill with random bytes</span>
<a name="l00229"></a>00229 <span class="comment"> * @param length Length of buffer in bytes</span>
<a name="l00230"></a>00230 <span class="comment"> */</span>
<a name="l00231"></a>00231 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__random.html#ga564e4c380e820a9b0d9e877d4852a65e">apr_generate_random_bytes</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * buf, 
<a name="l00232"></a>00232                                                     apr_size_t length);
<a name="l00233"></a>00233 
<a name="l00234"></a>00234 <span class="preprocessor">#endif</span>
<a name="l00235"></a>00235 <span class="preprocessor"></span><span class="comment">/** @} */</span>
<a name="l00236"></a>00236 
<a name="l00237"></a>00237 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00238"></a>00238 <span class="preprocessor"></span>}
<a name="l00239"></a>00239 <span class="preprocessor">#endif</span>
<a name="l00240"></a>00240 <span class="preprocessor"></span>
<a name="l00241"></a>00241 <span class="preprocessor">#endif  </span><span class="comment">/* ! APR_GENERAL_H */</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Mon May 23 21:31:31 2011 for Apache Portable Runtime by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
