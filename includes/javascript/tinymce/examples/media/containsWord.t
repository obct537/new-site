<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Apache Portable Runtime: apr_portable.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<h1>apr_portable.h</h1><a href="apr__portable_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* Licensed to the Apache Software Foundation (ASF) under one or more</span>
<a name="l00002"></a>00002 <span class="comment"> * contributor license agreements.  See the NOTICE file distributed with</span>
<a name="l00003"></a>00003 <span class="comment"> * this work for additional information regarding copyright ownership.</span>
<a name="l00004"></a>00004 <span class="comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span>
<a name="l00005"></a>00005 <span class="comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span>
<a name="l00006"></a>00006 <span class="comment"> * the License.  You may obtain a copy of the License at</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00009"></a>00009 <span class="comment"> *</span>
<a name="l00010"></a>00010 <span class="comment"> * Unless required by applicable law or agreed to in writing, software</span>
<a name="l00011"></a>00011 <span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00013"></a>00013 <span class="comment"> * See the License for the specific language governing permissions and</span>
<a name="l00014"></a>00014 <span class="comment"> * limitations under the License.</span>
<a name="l00015"></a>00015 <span class="comment"> */</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="comment">/* This header file is where you should put ANY platform specific information.</span>
<a name="l00018"></a>00018 <span class="comment"> * This should be the only header file that programs need to include that </span>
<a name="l00019"></a>00019 <span class="comment"> * actually has platform dependant code which refers to the .</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef APR_PORTABLE_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define APR_PORTABLE_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="comment">/**</span>
<a name="l00024"></a>00024 <span class="comment"> * @file apr_portable.h</span>
<a name="l00025"></a>00025 <span class="comment"> * @brief APR Portability Routines</span>
<a name="l00026"></a>00026 <span class="comment"> */</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="apr_8h.html" title="APR Platform Definitions.">apr.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="apr__pools_8h.html" title="APR memory allocation.">apr_pools.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="apr__thread__proc_8h.html" title="APR Thread and Process Library.">apr_thread_proc.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="apr__file__io_8h.html" title="APR File I/O Handling.">apr_file_io.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="apr__network__io_8h.html" title="APR Network library.">apr_network_io.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="apr__errno_8h.html" title="APR Error Codes.">apr_errno.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="apr__global__mutex_8h.html" title="APR Global Locking Routines.">apr_global_mutex.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="apr__proc__mutex_8h.html" title="APR Process Locking Routines.">apr_proc_mutex.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="apr__time_8h.html" title="APR Time Library.">apr_time.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="apr__dso_8h.html" title="APR Dynamic Object Handling Routines.">apr_dso.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="apr__shm_8h.html" title="APR Shared Memory Routines.">apr_shm.h</a>&quot;</span>
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="preprocessor">#if APR_HAVE_DIRENT_H</span>
<a name="l00041"></a>00041 <span class="preprocessor"></span><span class="preprocessor">#include &lt;dirent.h&gt;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#endif</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span><span class="preprocessor">#if APR_HAVE_FCNTL_H</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span><span class="preprocessor">#include &lt;fcntl.h&gt;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#endif</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span><span class="preprocessor">#if APR_HAVE_PTHREAD_H</span>
<a name="l00047"></a>00047 <span class="preprocessor"></span><span class="preprocessor">#include &lt;pthread.h&gt;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#endif</span>
<a name="l00049"></a>00049 <span class="preprocessor"></span>
<a name="l00050"></a>00050 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {
<a name="l00052"></a>00052 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l00053"></a>00053 <span class="comment"></span>
<a name="l00054"></a>00054 <span class="comment">/**</span>
<a name="l00055"></a>00055 <span class="comment"> * @defgroup apr_portabile Portability Routines</span>
<a name="l00056"></a>00056 <span class="comment"> * @ingroup APR </span>
<a name="l00057"></a>00057 <span class="comment"> * @{</span>
<a name="l00058"></a>00058 <span class="comment"> */</span>
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 <span class="preprocessor">#ifdef WIN32</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span><span class="comment">/* The primitives for Windows types */</span>
<a name="l00062"></a>00062 <span class="keyword">typedef</span> HANDLE                <a class="code" href="group__apr__portabile.html#ga885491b889a4a719549650d3a370fd34">apr_os_file_t</a>;
<a name="l00063"></a>00063 <span class="keyword">typedef</span> HANDLE                <a class="code" href="group__apr__portabile.html#gacb790646cfc3da1b43a5f7c4bfaa3937">apr_os_dir_t</a>;
<a name="l00064"></a>00064 <span class="keyword">typedef</span> SOCKET                <a class="code" href="group__apr__portabile.html#ga2965cd2e48cb6513bc0ba05aa6083ed7">apr_os_sock_t</a>;
<a name="l00065"></a>00065 <span class="keyword">typedef</span> HANDLE                <a class="code" href="structapr__os__proc__mutex__t.html">apr_os_proc_mutex_t</a>;
<a name="l00066"></a>00066 <span class="keyword">typedef</span> HANDLE                apr_os_thread_t;
<a name="l00067"></a>00067 <span class="keyword">typedef</span> HANDLE                <a class="code" href="group__apr__portabile.html#ga2ce5962de629ee6528081813c6b60e2e">apr_os_proc_t</a>;
<a name="l00068"></a>00068 <span class="keyword">typedef</span> DWORD                 apr_os_threadkey_t; 
<a name="l00069"></a>00069 <span class="keyword">typedef</span> FILETIME              <a class="code" href="group__apr__portabile.html#ga6d27e476300cd1d3fda24e1ff0e358e1">apr_os_imp_time_t</a>;
<a name="l00070"></a>00070 <span class="keyword">typedef</span> SYSTEMTIME            <a class="code" href="group__apr__portabile.html#ga0fa9349212690591b09a0cbea7b61bdd">apr_os_exp_time_t</a>;
<a name="l00071"></a>00071 <span class="keyword">typedef</span> HANDLE                <a class="code" href="group__apr__portabile.html#ga542684803ee8ab0abd69077697599ec0">apr_os_dso_handle_t</a>;
<a name="l00072"></a>00072 <span class="keyword">typedef</span> HANDLE                <a class="code" href="group__apr__portabile.html#ga7af1085d6390fbd08d66482b8c17de51">apr_os_shm_t</a>;
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="preprocessor">#elif defined(OS2)</span>
<a name="l00075"></a>00075 <span class="preprocessor"></span><span class="keyword">typedef</span> HFILE                 apr_os_file_t;
<a name="l00076"></a>00076 <span class="keyword">typedef</span> HDIR                  apr_os_dir_t;
<a name="l00077"></a>00077 <span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_sock_t;
<a name="l00078"></a>00078 <span class="keyword">typedef</span> HMTX                  apr_os_proc_mutex_t;
<a name="l00079"></a>00079 <span class="keyword">typedef</span> TID                   apr_os_thread_t;
<a name="l00080"></a>00080 <span class="keyword">typedef</span> PID                   apr_os_proc_t;
<a name="l00081"></a>00081 <span class="keyword">typedef</span> PULONG                apr_os_threadkey_t; 
<a name="l00082"></a>00082 <span class="keyword">typedef</span> <span class="keyword">struct </span>timeval        apr_os_imp_time_t;
<a name="l00083"></a>00083 <span class="keyword">typedef</span> <span class="keyword">struct </span>tm             apr_os_exp_time_t;
<a name="l00084"></a>00084 <span class="keyword">typedef</span> HMODULE               apr_os_dso_handle_t;
<a name="l00085"></a>00085 <span class="keyword">typedef</span> <span class="keywordtype">void</span>*                 apr_os_shm_t;
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 <span class="preprocessor">#elif defined(__BEOS__)</span>
<a name="l00088"></a>00088 <span class="preprocessor"></span><span class="preprocessor">#include &lt;kernel/OS.h&gt;</span>
<a name="l00089"></a>00089 <span class="preprocessor">#include &lt;kernel/image.h&gt;</span>
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 <span class="keyword">struct </span>apr_os_proc_mutex_t {
<a name="l00092"></a>00092         sem_id sem;
<a name="l00093"></a>00093         int32  ben;
<a name="l00094"></a>00094 };
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 <span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_file_t;
<a name="l00097"></a>00097 <span class="keyword">typedef</span> DIR                   apr_os_dir_t;
<a name="l00098"></a>00098 <span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_sock_t;
<a name="l00099"></a>00099 <span class="keyword">typedef</span> <span class="keyword">struct </span>apr_os_proc_mutex_t  apr_os_proc_mutex_t;
<a name="l00100"></a>00100 <span class="keyword">typedef</span> thread_id             apr_os_thread_t;
<a name="l00101"></a>00101 <span class="keyword">typedef</span> thread_id             apr_os_proc_t;
<a name="l00102"></a>00102 <span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_threadkey_t;
<a name="l00103"></a>00103 <span class="keyword">typedef</span> <span class="keyword">struct </span>timeval        apr_os_imp_time_t;
<a name="l00104"></a>00104 <span class="keyword">typedef</span> <span class="keyword">struct </span>tm             apr_os_exp_time_t;
<a name="l00105"></a>00105 <span class="keyword">typedef</span> image_id              apr_os_dso_handle_t;
<a name="l00106"></a>00106 <span class="keyword">typedef</span> <span class="keywordtype">void</span>*                 apr_os_shm_t;
<a name="l00107"></a>00107 
<a name="l00108"></a>00108 <span class="preprocessor">#elif defined(NETWARE)</span>
<a name="l00109"></a>00109 <span class="preprocessor"></span><span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_file_t;
<a name="l00110"></a>00110 <span class="keyword">typedef</span> DIR                   apr_os_dir_t;
<a name="l00111"></a>00111 <span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_sock_t;
<a name="l00112"></a>00112 <span class="keyword">typedef</span> NXMutex_t             apr_os_proc_mutex_t;
<a name="l00113"></a>00113 <span class="keyword">typedef</span> NXThreadId_t          apr_os_thread_t;
<a name="l00114"></a>00114 <span class="keyword">typedef</span> <span class="keywordtype">long</span>                  apr_os_proc_t;
<a name="l00115"></a>00115 <span class="keyword">typedef</span> NXKey_t               apr_os_threadkey_t; 
<a name="l00116"></a>00116 <span class="keyword">typedef</span> <span class="keyword">struct </span>timeval        apr_os_imp_time_t;
<a name="l00117"></a>00117 <span class="keyword">typedef</span> <span class="keyword">struct </span>tm             apr_os_exp_time_t;
<a name="l00118"></a>00118 <span class="keyword">typedef</span> <span class="keywordtype">void</span> *                apr_os_dso_handle_t;
<a name="l00119"></a>00119 <span class="keyword">typedef</span> <span class="keywordtype">void</span>*                 apr_os_shm_t;
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 <span class="preprocessor">#else</span>
<a name="l00122"></a>00122 <span class="preprocessor"></span><span class="comment">/* Any other OS should go above this one.  This is the lowest common</span>
<a name="l00123"></a>00123 <span class="comment"> * denominator typedefs for  all UNIX-like systems.  :)</span>
<a name="l00124"></a>00124 <span class="comment"> */</span>
<a name="l00125"></a>00125 <span class="comment"></span>
<a name="l00126"></a>00126 <span class="comment">/** Basic OS process mutex structure. */</span>
<a name="l00127"></a><a class="code" href="structapr__os__proc__mutex__t.html">00127</a> <span class="keyword">struct </span>apr_os_proc_mutex_t {
<a name="l00128"></a>00128 <span class="preprocessor">#if APR_HAS_SYSVSEM_SERIALIZE || APR_HAS_FCNTL_SERIALIZE || APR_HAS_FLOCK_SERIALIZE</span>
<a name="l00129"></a>00129 <span class="preprocessor"></span><span class="comment">    /** Value used for SYS V Semaphore, FCNTL and FLOCK serialization */</span>
<a name="l00130"></a>00130     <span class="keywordtype">int</span> crossproc;
<a name="l00131"></a>00131 <span class="preprocessor">#endif</span>
<a name="l00132"></a>00132 <span class="preprocessor"></span><span class="preprocessor">#if APR_HAS_PROC_PTHREAD_SERIALIZE</span>
<a name="l00133"></a>00133 <span class="preprocessor"></span><span class="comment">    /** Value used for PTHREAD serialization */</span>
<a name="l00134"></a>00134     pthread_mutex_t *pthread_interproc;
<a name="l00135"></a>00135 <span class="preprocessor">#endif</span>
<a name="l00136"></a>00136 <span class="preprocessor"></span><span class="preprocessor">#if APR_HAS_THREADS</span>
<a name="l00137"></a>00137 <span class="preprocessor"></span>    <span class="comment">/* If no threads, no need for thread locks */</span>
<a name="l00138"></a>00138 <span class="preprocessor">#if APR_USE_PTHREAD_SERIALIZE</span>
<a name="l00139"></a>00139 <span class="preprocessor"></span><span class="comment">    /** This value is currently unused within APR and Apache */</span> 
<a name="l00140"></a>00140     pthread_mutex_t *intraproc;
<a name="l00141"></a>00141 <span class="preprocessor">#endif</span>
<a name="l00142"></a>00142 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00143"></a>00143 <span class="preprocessor"></span>};
<a name="l00144"></a>00144 
<a name="l00145"></a><a class="code" href="group__apr__portabile.html#ga885491b889a4a719549650d3a370fd34">00145</a> <span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_file_t;        <span class="comment">/**&lt; native file */</span>
<a name="l00146"></a><a class="code" href="group__apr__portabile.html#gacb790646cfc3da1b43a5f7c4bfaa3937">00146</a> <span class="keyword">typedef</span> DIR                   apr_os_dir_t;         <span class="comment">/**&lt; native dir */</span>
<a name="l00147"></a><a class="code" href="group__apr__portabile.html#ga2965cd2e48cb6513bc0ba05aa6083ed7">00147</a> <span class="keyword">typedef</span> <span class="keywordtype">int</span>                   apr_os_sock_t;        <span class="comment">/**&lt; native dir */</span>
<a name="l00148"></a><a class="code" href="group__apr__portabile.html#ga107413a26e947456cabfcab99b8a7ade">00148</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>apr_os_proc_mutex_t  apr_os_proc_mutex_t; <span class="comment">/**&lt; native proces</span>
<a name="l00149"></a>00149 <span class="comment">                                                          *   mutex</span>
<a name="l00150"></a>00150 <span class="comment">                                                          */</span>
<a name="l00151"></a>00151 <span class="preprocessor">#if APR_HAS_THREADS &amp;&amp; APR_HAVE_PTHREAD_H </span>
<a name="l00152"></a>00152 <span class="preprocessor"></span><span class="keyword">typedef</span> pthread_t             apr_os_thread_t;      <span class="comment">/**&lt; native thread */</span>
<a name="l00153"></a>00153 <span class="keyword">typedef</span> pthread_key_t         apr_os_threadkey_t;   <span class="comment">/**&lt; native thread address</span>
<a name="l00154"></a>00154 <span class="comment">                                                     *   space */</span>
<a name="l00155"></a>00155 <span class="preprocessor">#endif</span>
<a name="l00156"></a><a class="code" href="group__apr__portabile.html#ga2ce5962de629ee6528081813c6b60e2e">00156</a> <span class="preprocessor"></span><span class="keyword">typedef</span> pid_t                 apr_os_proc_t;        <span class="comment">/**&lt; native pid */</span>
<a name="l00157"></a><a class="code" href="group__apr__portabile.html#ga6d27e476300cd1d3fda24e1ff0e358e1">00157</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>timeval        apr_os_imp_time_t;    <span class="comment">/**&lt; native timeval */</span>
<a name="l00158"></a><a class="code" href="group__apr__portabile.html#ga0fa9349212690591b09a0cbea7b61bdd">00158</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>tm             apr_os_exp_time_t;    <span class="comment">/**&lt; native tm */</span><span class="comment"></span>
<a name="l00159"></a>00159 <span class="comment">/** @var apr_os_dso_handle_t</span>
<a name="l00160"></a>00160 <span class="comment"> * native dso types</span>
<a name="l00161"></a>00161 <span class="comment"> */</span>
<a name="l00162"></a>00162 <span class="preprocessor">#if defined(HPUX) || defined(HPUX10) || defined(HPUX11)</span>
<a name="l00163"></a>00163 <span class="preprocessor"></span><span class="preprocessor">#include &lt;dl.h&gt;</span>
<a name="l00164"></a>00164 <span class="keyword">typedef</span> shl_t                 apr_os_dso_handle_t;
<a name="l00165"></a>00165 <span class="preprocessor">#elif defined(DARWIN)</span>
<a name="l00166"></a>00166 <span class="preprocessor"></span><span class="preprocessor">#include &lt;mach-o/dyld.h&gt;</span>
<a name="l00167"></a>00167 <span class="keyword">typedef</span> NSModule              apr_os_dso_handle_t;
<a name="l00168"></a>00168 <span class="preprocessor">#else</span>
<a name="l00169"></a><a class="code" href="group__apr__portabile.html#ga542684803ee8ab0abd69077697599ec0">00169</a> <span class="preprocessor"></span><span class="keyword">typedef</span> <span class="keywordtype">void</span> *                apr_os_dso_handle_t;
<a name="l00170"></a>00170 <span class="preprocessor">#endif</span>
<a name="l00171"></a><a class="code" href="group__apr__portabile.html#ga7af1085d6390fbd08d66482b8c17de51">00171</a> <span class="preprocessor"></span><span class="keyword">typedef</span> <span class="keywordtype">void</span>*                 apr_os_shm_t;         <span class="comment">/**&lt; native SHM */</span>
<a name="l00172"></a>00172 
<a name="l00173"></a>00173 <span class="preprocessor">#endif</span>
<a name="l00174"></a>00174 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00175"></a>00175 <span class="comment">/**</span>
<a name="l00176"></a>00176 <span class="comment"> * @typedef apr_os_sock_info_t</span>
<a name="l00177"></a>00177 <span class="comment"> * @brief alias for local OS socket</span>
<a name="l00178"></a>00178 <span class="comment"> */</span><span class="comment"></span>
<a name="l00179"></a>00179 <span class="comment">/**</span>
<a name="l00180"></a>00180 <span class="comment"> * everything APR needs to know about an active socket to construct</span>
<a name="l00181"></a>00181 <span class="comment"> * an APR socket from it; currently, this is platform-independent</span>
<a name="l00182"></a>00182 <span class="comment"> */</span>
<a name="l00183"></a><a class="code" href="structapr__os__sock__info__t.html">00183</a> <span class="keyword">struct </span><a class="code" href="structapr__os__sock__info__t.html">apr_os_sock_info_t</a> {
<a name="l00184"></a><a class="code" href="structapr__os__sock__info__t.html#a952464d2f91ca4650e8b4848a81745b5">00184</a>     apr_os_sock_t *<a class="code" href="structapr__os__sock__info__t.html#a952464d2f91ca4650e8b4848a81745b5">os_sock</a>; <span class="comment">/**&lt; always required */</span>
<a name="l00185"></a><a class="code" href="structapr__os__sock__info__t.html#afaf470560cbc3088479af708878aa086">00185</a>     <span class="keyword">struct </span>sockaddr *<a class="code" href="structapr__os__sock__info__t.html#afaf470560cbc3088479af708878aa086">local</a>; <span class="comment">/**&lt; NULL if not yet bound */</span>
<a name="l00186"></a><a class="code" href="structapr__os__sock__info__t.html#ae71fe14a5eb9141fc4ad0a6d0a91f17e">00186</a>     <span class="keyword">struct </span>sockaddr *<a class="code" href="structapr__os__sock__info__t.html#ae71fe14a5eb9141fc4ad0a6d0a91f17e">remote</a>; <span class="comment">/**&lt; NULL if not connected */</span>
<a name="l00187"></a><a class="code" href="structapr__os__sock__info__t.html#aa29fd0cf57b0b5e3559961f068fa8b7e">00187</a>     <span class="keywordtype">int</span> <a class="code" href="structapr__os__sock__info__t.html#aa29fd0cf57b0b5e3559961f068fa8b7e">family</a>;             <span class="comment">/**&lt; always required (APR_INET, APR_INET6, etc.) */</span>
<a name="l00188"></a><a class="code" href="structapr__os__sock__info__t.html#a248fb394cd644b31619f44de0936aa04">00188</a>     <span class="keywordtype">int</span> <a class="code" href="structapr__os__sock__info__t.html#a248fb394cd644b31619f44de0936aa04">type</a>;               <span class="comment">/**&lt; always required (SOCK_STREAM, SOCK_DGRAM, etc.) */</span>
<a name="l00189"></a><a class="code" href="structapr__os__sock__info__t.html#a176ede3ecf40abf0f82a01bfeb95f1e3">00189</a>     <span class="keywordtype">int</span> <a class="code" href="structapr__os__sock__info__t.html#a176ede3ecf40abf0f82a01bfeb95f1e3">protocol</a>;           <span class="comment">/**&lt; 0 or actual protocol (APR_PROTO_SCTP, APR_PROTO_TCP, etc.) */</span>
<a name="l00190"></a>00190 };
<a name="l00191"></a>00191 
<a name="l00192"></a><a class="code" href="group__apr__portabile.html#gaece2b8b41cbb949590896b47daaa9fd2">00192</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structapr__os__sock__info__t.html">apr_os_sock_info_t</a> <a class="code" href="structapr__os__sock__info__t.html">apr_os_sock_info_t</a>;
<a name="l00193"></a>00193 
<a name="l00194"></a>00194 <span class="preprocessor">#if APR_PROC_MUTEX_IS_GLOBAL || defined(DOXYGEN)</span>
<a name="l00195"></a>00195 <span class="preprocessor"></span><span class="comment">/** Opaque global mutex type */</span>
<a name="l00196"></a><a class="code" href="group__apr__portabile.html#gadd3a9818afc16248c3c30f22e19838dd">00196</a> <span class="preprocessor">#define apr_os_global_mutex_t apr_os_proc_mutex_t</span>
<a name="l00197"></a>00197 <span class="preprocessor"></span><span class="comment">/** @return apr_os_global_mutex */</span>
<a name="l00198"></a><a class="code" href="group__apr__portabile.html#gae9be7821e8c021915c930fc83d6d4a73">00198</a> <span class="preprocessor">#define apr_os_global_mutex_get apr_os_proc_mutex_get</span>
<a name="l00199"></a>00199 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00200"></a>00200 <span class="preprocessor"></span><span class="comment">    /** Thread and process mutex for those platforms where process mutexes</span>
<a name="l00201"></a>00201 <span class="comment">     *  are not held in threads.</span>
<a name="l00202"></a>00202 <span class="comment">     */</span>
<a name="l00203"></a>00203     <span class="keyword">struct </span><a class="code" href="group__apr__portabile.html#gadd3a9818afc16248c3c30f22e19838dd">apr_os_global_mutex_t</a> {
<a name="l00204"></a>00204         <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *pool;
<a name="l00205"></a>00205         <a class="code" href="group__apr__proc__mutex.html#ga0fae3a1ab686cd1f252c6062e4c97bd2">apr_proc_mutex_t</a> *proc_mutex;
<a name="l00206"></a>00206 <span class="preprocessor">#if APR_HAS_THREADS</span>
<a name="l00207"></a>00207 <span class="preprocessor"></span>        <a class="code" href="group__apr__thread__mutex.html#ga95712060ba3a192036416e1ccef1db75">apr_thread_mutex_t</a> *thread_mutex;
<a name="l00208"></a>00208 <span class="preprocessor">#endif </span><span class="comment">/* APR_HAS_THREADS */</span>
<a name="l00209"></a>00209     };
<a name="l00210"></a>00210     <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__apr__portabile.html#gadd3a9818afc16248c3c30f22e19838dd">apr_os_global_mutex_t</a> <a class="code" href="group__apr__portabile.html#gadd3a9818afc16248c3c30f22e19838dd">apr_os_global_mutex_t</a>;
<a name="l00211"></a>00211 
<a name="l00212"></a>00212 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#gae9be7821e8c021915c930fc83d6d4a73">apr_os_global_mutex_get</a>(<a class="code" href="group__apr__portabile.html#gadd3a9818afc16248c3c30f22e19838dd">apr_os_global_mutex_t</a> *ospmutex, 
<a name="l00213"></a>00213                                                 <a class="code" href="group___a_p_r___global_mutex.html#ga3fc7dc5b076533ee566aa4888ac35ee7">apr_global_mutex_t</a> *pmutex);
<a name="l00214"></a>00214 <span class="preprocessor">#endif</span>
<a name="l00215"></a>00215 <span class="preprocessor"></span>
<a name="l00216"></a>00216 <span class="comment"></span>
<a name="l00217"></a>00217 <span class="comment">/**</span>
<a name="l00218"></a>00218 <span class="comment"> * convert the file from apr type to os specific type.</span>
<a name="l00219"></a>00219 <span class="comment"> * @param thefile The os specific file we are converting to</span>
<a name="l00220"></a>00220 <span class="comment"> * @param file The apr file to convert.</span>
<a name="l00221"></a>00221 <span class="comment"> * @remark On Unix, it is only possible to get a file descriptor from </span>
<a name="l00222"></a>00222 <span class="comment"> *         an apr file type.</span>
<a name="l00223"></a>00223 <span class="comment"> */</span>
<a name="l00224"></a>00224 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga1ff9a9a7313954fb6590f280d2c2e992">apr_os_file_get</a>(apr_os_file_t *thefile,
<a name="l00225"></a>00225                                           <a class="code" href="group__apr__file__io.html#gaa46e4763ac375ea3c7a43ba6f6099e22">apr_file_t</a> *file);
<a name="l00226"></a>00226 <span class="comment"></span>
<a name="l00227"></a>00227 <span class="comment">/**</span>
<a name="l00228"></a>00228 <span class="comment"> * convert the dir from apr type to os specific type.</span>
<a name="l00229"></a>00229 <span class="comment"> * @param thedir The os specific dir we are converting to</span>
<a name="l00230"></a>00230 <span class="comment"> * @param dir The apr dir to convert.</span>
<a name="l00231"></a>00231 <span class="comment"> */</span>   
<a name="l00232"></a>00232 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga99225bfab137069b9d5c5a72f863c577">apr_os_dir_get</a>(apr_os_dir_t **thedir, 
<a name="l00233"></a>00233                                          <a class="code" href="group__apr__file__info.html#ga92ed8cf52cba2abb42cf74087aa74da8">apr_dir_t</a> *dir);
<a name="l00234"></a>00234 <span class="comment"></span>
<a name="l00235"></a>00235 <span class="comment">/**</span>
<a name="l00236"></a>00236 <span class="comment"> * Convert the socket from an apr type to an OS specific socket</span>
<a name="l00237"></a>00237 <span class="comment"> * @param thesock The socket to convert.</span>
<a name="l00238"></a>00238 <span class="comment"> * @param sock The os specifc equivelant of the apr socket..</span>
<a name="l00239"></a>00239 <span class="comment"> */</span>
<a name="l00240"></a>00240 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga07ec79bbb5243596933cd2caf2d428df">apr_os_sock_get</a>(apr_os_sock_t *thesock,
<a name="l00241"></a>00241                                           <a class="code" href="group__apr__network__io.html#ga49262b223e7434746e1f1737659aa2c3">apr_socket_t</a> *sock);
<a name="l00242"></a>00242 <span class="comment"></span>
<a name="l00243"></a>00243 <span class="comment">/**</span>
<a name="l00244"></a>00244 <span class="comment"> * Convert the proc mutex from os specific type to apr type</span>
<a name="l00245"></a>00245 <span class="comment"> * @param ospmutex The os specific proc mutex we are converting to.</span>
<a name="l00246"></a>00246 <span class="comment"> * @param pmutex The apr proc mutex to convert.</span>
<a name="l00247"></a>00247 <span class="comment"> */</span>
<a name="l00248"></a>00248 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga2003a3142f05675696268053b2fddbe1">apr_os_proc_mutex_get</a>(apr_os_proc_mutex_t *ospmutex, 
<a name="l00249"></a>00249                                                 <a class="code" href="group__apr__proc__mutex.html#ga0fae3a1ab686cd1f252c6062e4c97bd2">apr_proc_mutex_t</a> *pmutex);
<a name="l00250"></a>00250 <span class="comment"></span>
<a name="l00251"></a>00251 <span class="comment">/**</span>
<a name="l00252"></a>00252 <span class="comment"> * Get the exploded time in the platforms native format.</span>
<a name="l00253"></a>00253 <span class="comment"> * @param ostime the native time format</span>
<a name="l00254"></a>00254 <span class="comment"> * @param aprtime the time to convert</span>
<a name="l00255"></a>00255 <span class="comment"> */</span>
<a name="l00256"></a>00256 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga903df49f8cd2bb7298cb1612ff6394df">apr_os_exp_time_get</a>(apr_os_exp_time_t **ostime,
<a name="l00257"></a>00257                                  <a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *aprtime);
<a name="l00258"></a>00258 <span class="comment"></span>
<a name="l00259"></a>00259 <span class="comment">/**</span>
<a name="l00260"></a>00260 <span class="comment"> * Get the imploded time in the platforms native format.</span>
<a name="l00261"></a>00261 <span class="comment"> * @param ostime  the native time format</span>
<a name="l00262"></a>00262 <span class="comment"> * @param aprtime the time to convert</span>
<a name="l00263"></a>00263 <span class="comment"> */</span>
<a name="l00264"></a>00264 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga406db611360a70360bec953cd92d2df7">apr_os_imp_time_get</a>(apr_os_imp_time_t **ostime, 
<a name="l00265"></a>00265                                               <a class="code" href="group__apr__time.html#gadb4bde16055748190eae190c55aa02bb">apr_time_t</a> *aprtime);
<a name="l00266"></a>00266 <span class="comment"></span>
<a name="l00267"></a>00267 <span class="comment">/**</span>
<a name="l00268"></a>00268 <span class="comment"> * convert the shm from apr type to os specific type.</span>
<a name="l00269"></a>00269 <span class="comment"> * @param osshm The os specific shm representation</span>
<a name="l00270"></a>00270 <span class="comment"> * @param shm The apr shm to convert.</span>
<a name="l00271"></a>00271 <span class="comment"> */</span>   
<a name="l00272"></a>00272 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga80ebb75a574f97363455dbab05e289d6">apr_os_shm_get</a>(apr_os_shm_t *osshm,
<a name="l00273"></a>00273                                          <a class="code" href="group__apr__shm.html#ga79e8c16bdeaf7ade4ef0f935249e7c2f">apr_shm_t</a> *shm);
<a name="l00274"></a>00274 
<a name="l00275"></a>00275 <span class="preprocessor">#if APR_HAS_THREADS || defined(DOXYGEN)</span>
<a name="l00276"></a>00276 <span class="preprocessor"></span><span class="comment">/** </span>
<a name="l00277"></a>00277 <span class="comment"> * @defgroup apr_os_thread Thread portability Routines</span>
<a name="l00278"></a>00278 <span class="comment"> * @{ </span>
<a name="l00279"></a>00279 <span class="comment"> */</span><span class="comment"></span>
<a name="l00280"></a>00280 <span class="comment">/**</span>
<a name="l00281"></a>00281 <span class="comment"> * convert the thread to os specific type from apr type.</span>
<a name="l00282"></a>00282 <span class="comment"> * @param thethd The apr thread to convert</span>
<a name="l00283"></a>00283 <span class="comment"> * @param thd The os specific thread we are converting to</span>
<a name="l00284"></a>00284 <span class="comment"> */</span>
<a name="l00285"></a>00285 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__os__thread.html#gadda5e99fc387491a2a9436bf6144bd49">apr_os_thread_get</a>(apr_os_thread_t **thethd, 
<a name="l00286"></a>00286                                             <a class="code" href="group__apr__thread__proc.html#ga646c71351e723d84f8cc8c8d1d5937be">apr_thread_t</a> *thd);
<a name="l00287"></a>00287 <span class="comment"></span>
<a name="l00288"></a>00288 <span class="comment">/**</span>
<a name="l00289"></a>00289 <span class="comment"> * convert the thread private memory key to os specific type from an apr type.</span>
<a name="l00290"></a>00290 <span class="comment"> * @param thekey The apr handle we are converting from.</span>
<a name="l00291"></a>00291 <span class="comment"> * @param key The os specific handle we are converting to.</span>
<a name="l00292"></a>00292 <span class="comment"> */</span>
<a name="l00293"></a>00293 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__os__thread.html#ga2fd6ec9d398c4f2564765866c3d31219">apr_os_threadkey_get</a>(apr_os_threadkey_t *thekey,
<a name="l00294"></a>00294                                                <a class="code" href="group__apr__thread__proc.html#ga337c9c1bd2d47740022071a5c41f2edb">apr_threadkey_t</a> *key);
<a name="l00295"></a>00295 <span class="comment"></span>
<a name="l00296"></a>00296 <span class="comment">/**</span>
<a name="l00297"></a>00297 <span class="comment"> * convert the thread from os specific type to apr type.</span>
<a name="l00298"></a>00298 <span class="comment"> * @param thd The apr thread we are converting to.</span>
<a name="l00299"></a>00299 <span class="comment"> * @param thethd The os specific thread to convert</span>
<a name="l00300"></a>00300 <span class="comment"> * @param cont The pool to use if it is needed.</span>
<a name="l00301"></a>00301 <span class="comment"> */</span>
<a name="l00302"></a>00302 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__os__thread.html#ga7eda58df34fbc11cd251899e575a1b0f">apr_os_thread_put</a>(<a class="code" href="group__apr__thread__proc.html#ga646c71351e723d84f8cc8c8d1d5937be">apr_thread_t</a> **thd,
<a name="l00303"></a>00303                                             apr_os_thread_t *thethd,
<a name="l00304"></a>00304                                             <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont);
<a name="l00305"></a>00305 <span class="comment"></span>
<a name="l00306"></a>00306 <span class="comment">/**</span>
<a name="l00307"></a>00307 <span class="comment"> * convert the thread private memory key from os specific type to apr type.</span>
<a name="l00308"></a>00308 <span class="comment"> * @param key The apr handle we are converting to.</span>
<a name="l00309"></a>00309 <span class="comment"> * @param thekey The os specific handle to convert</span>
<a name="l00310"></a>00310 <span class="comment"> * @param cont The pool to use if it is needed.</span>
<a name="l00311"></a>00311 <span class="comment"> */</span>
<a name="l00312"></a>00312 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__os__thread.html#ga386f6e3e205d422f623132bb50147133">apr_os_threadkey_put</a>(<a class="code" href="group__apr__thread__proc.html#ga337c9c1bd2d47740022071a5c41f2edb">apr_threadkey_t</a> **key,
<a name="l00313"></a>00313                                                apr_os_threadkey_t *thekey,
<a name="l00314"></a>00314                                                <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont);<span class="comment"></span>
<a name="l00315"></a>00315 <span class="comment">/**</span>
<a name="l00316"></a>00316 <span class="comment"> * Get the thread ID</span>
<a name="l00317"></a>00317 <span class="comment"> */</span>
<a name="l00318"></a>00318 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(apr_os_thread_t) <a class="code" href="group__apr__os__thread.html#ga669a17c3a41db20bbc41c06d0e8881b3">apr_os_thread_current</a>(<span class="keywordtype">void</span>);
<a name="l00319"></a>00319 <span class="comment"></span>
<a name="l00320"></a>00320 <span class="comment">/**</span>
<a name="l00321"></a>00321 <span class="comment"> * Compare two thread id&#39;s</span>
<a name="l00322"></a>00322 <span class="comment"> * @param tid1 1st Thread ID to compare</span>
<a name="l00323"></a>00323 <span class="comment"> * @param tid2 2nd Thread ID to compare</span>
<a name="l00324"></a>00324 <span class="comment"> */</span> 
<a name="l00325"></a>00325 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<span class="keywordtype">int</span>) <a class="code" href="group__apr__os__thread.html#gac55d4bbc219435046872b1236feb9bfa">apr_os_thread_equal</a>(apr_os_thread_t tid1, 
<a name="l00326"></a>00326                                      apr_os_thread_t tid2);
<a name="l00327"></a>00327 <span class="comment"></span>
<a name="l00328"></a>00328 <span class="comment">/** @} */</span>
<a name="l00329"></a>00329 <span class="preprocessor">#endif </span><span class="comment">/* APR_HAS_THREADS */</span>
<a name="l00330"></a>00330 <span class="comment"></span>
<a name="l00331"></a>00331 <span class="comment">/**</span>
<a name="l00332"></a>00332 <span class="comment"> * convert the file from os specific type to apr type.</span>
<a name="l00333"></a>00333 <span class="comment"> * @param file The apr file we are converting to.</span>
<a name="l00334"></a>00334 <span class="comment"> * @param thefile The os specific file to convert</span>
<a name="l00335"></a>00335 <span class="comment"> * @param flags The flags that were used to open this file.</span>
<a name="l00336"></a>00336 <span class="comment"> * @param cont The pool to use if it is needed.</span>
<a name="l00337"></a>00337 <span class="comment"> * @remark On Unix, it is only possible to put a file descriptor into</span>
<a name="l00338"></a>00338 <span class="comment"> *         an apr file type.</span>
<a name="l00339"></a>00339 <span class="comment"> */</span>
<a name="l00340"></a>00340 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga17a85a792b05506f293e7cf36f8754b7">apr_os_file_put</a>(<a class="code" href="group__apr__file__io.html#gaa46e4763ac375ea3c7a43ba6f6099e22">apr_file_t</a> **file,
<a name="l00341"></a>00341                                           apr_os_file_t *thefile,
<a name="l00342"></a>00342                                           apr_int32_t flags, <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont); 
<a name="l00343"></a>00343 <span class="comment"></span>
<a name="l00344"></a>00344 <span class="comment">/**</span>
<a name="l00345"></a>00345 <span class="comment"> * convert the file from os specific type to apr type.</span>
<a name="l00346"></a>00346 <span class="comment"> * @param file The apr file we are converting to.</span>
<a name="l00347"></a>00347 <span class="comment"> * @param thefile The os specific pipe to convert</span>
<a name="l00348"></a>00348 <span class="comment"> * @param cont The pool to use if it is needed.</span>
<a name="l00349"></a>00349 <span class="comment"> * @remark On Unix, it is only possible to put a file descriptor into</span>
<a name="l00350"></a>00350 <span class="comment"> *         an apr file type.</span>
<a name="l00351"></a>00351 <span class="comment"> */</span>
<a name="l00352"></a>00352 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga8886290c57248bc4d6c1e4802cc377f0">apr_os_pipe_put</a>(<a class="code" href="group__apr__file__io.html#gaa46e4763ac375ea3c7a43ba6f6099e22">apr_file_t</a> **file,
<a name="l00353"></a>00353                                           apr_os_file_t *thefile,
<a name="l00354"></a>00354                                           <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont);
<a name="l00355"></a>00355 <span class="comment"></span>
<a name="l00356"></a>00356 <span class="comment">/**</span>
<a name="l00357"></a>00357 <span class="comment"> * convert the file from os specific type to apr type.</span>
<a name="l00358"></a>00358 <span class="comment"> * @param file The apr file we are converting to.</span>
<a name="l00359"></a>00359 <span class="comment"> * @param thefile The os specific pipe to convert</span>
<a name="l00360"></a>00360 <span class="comment"> * @param register_cleanup A cleanup will be registered on the apr_file_t</span>
<a name="l00361"></a>00361 <span class="comment"> *   to issue apr_file_close().</span>
<a name="l00362"></a>00362 <span class="comment"> * @param cont The pool to use if it is needed.</span>
<a name="l00363"></a>00363 <span class="comment"> * @remark On Unix, it is only possible to put a file descriptor into</span>
<a name="l00364"></a>00364 <span class="comment"> *         an apr file type.</span>
<a name="l00365"></a>00365 <span class="comment"> */</span>
<a name="l00366"></a>00366 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#gaa3b025a01b6e9b71e402abba74fe3b93">apr_os_pipe_put_ex</a>(<a class="code" href="group__apr__file__io.html#gaa46e4763ac375ea3c7a43ba6f6099e22">apr_file_t</a> **file,
<a name="l00367"></a>00367                                              apr_os_file_t *thefile,
<a name="l00368"></a>00368                                              <span class="keywordtype">int</span> register_cleanup,
<a name="l00369"></a>00369                                              <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont);
<a name="l00370"></a>00370 <span class="comment"></span>
<a name="l00371"></a>00371 <span class="comment">/**</span>
<a name="l00372"></a>00372 <span class="comment"> * convert the dir from os specific type to apr type.</span>
<a name="l00373"></a>00373 <span class="comment"> * @param dir The apr dir we are converting to.</span>
<a name="l00374"></a>00374 <span class="comment"> * @param thedir The os specific dir to convert</span>
<a name="l00375"></a>00375 <span class="comment"> * @param cont The pool to use when creating to apr directory.</span>
<a name="l00376"></a>00376 <span class="comment"> */</span>
<a name="l00377"></a>00377 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga5087057e23ff6b79ae31ef6e7cc7301e">apr_os_dir_put</a>(<a class="code" href="group__apr__file__info.html#ga92ed8cf52cba2abb42cf74087aa74da8">apr_dir_t</a> **dir,
<a name="l00378"></a>00378                                          apr_os_dir_t *thedir,
<a name="l00379"></a>00379                                          <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont); 
<a name="l00380"></a>00380 <span class="comment"></span>
<a name="l00381"></a>00381 <span class="comment">/**</span>
<a name="l00382"></a>00382 <span class="comment"> * Convert a socket from the os specific type to the apr type</span>
<a name="l00383"></a>00383 <span class="comment"> * @param sock The pool to use.</span>
<a name="l00384"></a>00384 <span class="comment"> * @param thesock The socket to convert to.</span>
<a name="l00385"></a>00385 <span class="comment"> * @param cont The socket we are converting to an apr type.</span>
<a name="l00386"></a>00386 <span class="comment"> * @remark If it is a true socket, it is best to call apr_os_sock_make()</span>
<a name="l00387"></a>00387 <span class="comment"> *         and provide APR with more information about the socket.</span>
<a name="l00388"></a>00388 <span class="comment"> */</span>
<a name="l00389"></a>00389 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga729bd6825dfadd814de2aa602462d838">apr_os_sock_put</a>(<a class="code" href="group__apr__network__io.html#ga49262b223e7434746e1f1737659aa2c3">apr_socket_t</a> **sock, 
<a name="l00390"></a>00390                                           apr_os_sock_t *thesock, 
<a name="l00391"></a>00391                                           <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont);
<a name="l00392"></a>00392 <span class="comment"></span>
<a name="l00393"></a>00393 <span class="comment">/**</span>
<a name="l00394"></a>00394 <span class="comment"> * Create a socket from an existing descriptor and local and remote</span>
<a name="l00395"></a>00395 <span class="comment"> * socket addresses.</span>
<a name="l00396"></a>00396 <span class="comment"> * @param apr_sock The new socket that has been set up</span>
<a name="l00397"></a>00397 <span class="comment"> * @param os_sock_info The os representation of the socket handle and</span>
<a name="l00398"></a>00398 <span class="comment"> *        other characteristics of the socket</span>
<a name="l00399"></a>00399 <span class="comment"> * @param cont The pool to use</span>
<a name="l00400"></a>00400 <span class="comment"> * @remark If you only know the descriptor/handle or if it isn&#39;t really</span>
<a name="l00401"></a>00401 <span class="comment"> *         a true socket, use apr_os_sock_put() instead.</span>
<a name="l00402"></a>00402 <span class="comment"> */</span>
<a name="l00403"></a>00403 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga5df9f6b1b9c07bfeca3685118760eefc">apr_os_sock_make</a>(<a class="code" href="group__apr__network__io.html#ga49262b223e7434746e1f1737659aa2c3">apr_socket_t</a> **apr_sock,
<a name="l00404"></a>00404                                            <a class="code" href="structapr__os__sock__info__t.html">apr_os_sock_info_t</a> *os_sock_info,
<a name="l00405"></a>00405                                            <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont);
<a name="l00406"></a>00406 <span class="comment"></span>
<a name="l00407"></a>00407 <span class="comment">/**</span>
<a name="l00408"></a>00408 <span class="comment"> * Convert the proc mutex from os specific type to apr type</span>
<a name="l00409"></a>00409 <span class="comment"> * @param pmutex The apr proc mutex we are converting to.</span>
<a name="l00410"></a>00410 <span class="comment"> * @param ospmutex The os specific proc mutex to convert.</span>
<a name="l00411"></a>00411 <span class="comment"> * @param cont The pool to use if it is needed.</span>
<a name="l00412"></a>00412 <span class="comment"> */</span>
<a name="l00413"></a>00413 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga885f99da0c19912293b5b7bf9df21b02">apr_os_proc_mutex_put</a>(<a class="code" href="group__apr__proc__mutex.html#ga0fae3a1ab686cd1f252c6062e4c97bd2">apr_proc_mutex_t</a> **pmutex,
<a name="l00414"></a>00414                                                 apr_os_proc_mutex_t *ospmutex,
<a name="l00415"></a>00415                                                 <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont); 
<a name="l00416"></a>00416 <span class="comment"></span>
<a name="l00417"></a>00417 <span class="comment">/**</span>
<a name="l00418"></a>00418 <span class="comment"> * Put the imploded time in the APR format.</span>
<a name="l00419"></a>00419 <span class="comment"> * @param aprtime the APR time format</span>
<a name="l00420"></a>00420 <span class="comment"> * @param ostime the time to convert</span>
<a name="l00421"></a>00421 <span class="comment"> * @param cont the pool to use if necessary</span>
<a name="l00422"></a>00422 <span class="comment"> */</span>
<a name="l00423"></a>00423 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga8ba8b7036b84e260c1cf519c3247a7d4">apr_os_imp_time_put</a>(<a class="code" href="group__apr__time.html#gadb4bde16055748190eae190c55aa02bb">apr_time_t</a> *aprtime,
<a name="l00424"></a>00424                                               apr_os_imp_time_t **ostime,
<a name="l00425"></a>00425                                               <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont); 
<a name="l00426"></a>00426 <span class="comment"></span>
<a name="l00427"></a>00427 <span class="comment">/**</span>
<a name="l00428"></a>00428 <span class="comment"> * Put the exploded time in the APR format.</span>
<a name="l00429"></a>00429 <span class="comment"> * @param aprtime the APR time format</span>
<a name="l00430"></a>00430 <span class="comment"> * @param ostime the time to convert</span>
<a name="l00431"></a>00431 <span class="comment"> * @param cont the pool to use if necessary</span>
<a name="l00432"></a>00432 <span class="comment"> */</span>
<a name="l00433"></a>00433 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#ga59486f31d5b591863ed83e67cc8106b1">apr_os_exp_time_put</a>(<a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *aprtime,
<a name="l00434"></a>00434                                               apr_os_exp_time_t **ostime,
<a name="l00435"></a>00435                                               <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont); 
<a name="l00436"></a>00436 <span class="comment"></span>
<a name="l00437"></a>00437 <span class="comment">/**</span>
<a name="l00438"></a>00438 <span class="comment"> * convert the shared memory from os specific type to apr type.</span>
<a name="l00439"></a>00439 <span class="comment"> * @param shm The apr shm representation of osshm</span>
<a name="l00440"></a>00440 <span class="comment"> * @param osshm The os specific shm identity</span>
<a name="l00441"></a>00441 <span class="comment"> * @param cont The pool to use if it is needed.</span>
<a name="l00442"></a>00442 <span class="comment"> * @remark On fork()ed architectures, this is typically nothing more than</span>
<a name="l00443"></a>00443 <span class="comment"> * the memory block mapped.  On non-fork architectures, this is typically</span>
<a name="l00444"></a>00444 <span class="comment"> * some internal handle to pass the mapping from process to process.</span>
<a name="l00445"></a>00445 <span class="comment"> */</span>
<a name="l00446"></a>00446 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__portabile.html#gaac2b48e4ea4ac8f959cd0e78ede6c5f2">apr_os_shm_put</a>(<a class="code" href="group__apr__shm.html#ga79e8c16bdeaf7ade4ef0f935249e7c2f">apr_shm_t</a> **shm,
<a name="l00447"></a>00447                                          apr_os_shm_t *osshm,
<a name="l00448"></a>00448                                          <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *cont); 
<a name="l00449"></a>00449 
<a name="l00450"></a>00450 
<a name="l00451"></a>00451 <span class="preprocessor">#if APR_HAS_DSO || defined(DOXYGEN)</span>
<a name="l00452"></a>00452 <span class="preprocessor"></span><span class="comment">/** </span>
<a name="l00453"></a>00453 <span class="comment"> * @defgroup apr_os_dso DSO (Dynamic Loading) Portabiliity Routines</span>
<a name="l00454"></a>00454 <span class="comment"> * @{</span>
<a name="l00455"></a>00455 <span class="comment"> */</span><span class="comment"></span>
<a name="l00456"></a>00456 <span class="comment">/**</span>
<a name="l00457"></a>00457 <span class="comment"> * convert the dso handle from os specific to apr</span>
<a name="l00458"></a>00458 <span class="comment"> * @param dso The apr handle we are converting to</span>
<a name="l00459"></a>00459 <span class="comment"> * @param thedso the os specific handle to convert</span>
<a name="l00460"></a>00460 <span class="comment"> * @param pool the pool to use if it is needed</span>
<a name="l00461"></a>00461 <span class="comment"> */</span>
<a name="l00462"></a>00462 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__os__dso.html#gac8852ec406fad593be38c0dfbb401633">apr_os_dso_handle_put</a>(<a class="code" href="group__apr__dso.html#ga85e7e28490d026aeed78bd78e9933472">apr_dso_handle_t</a> **dso,
<a name="l00463"></a>00463                                                 apr_os_dso_handle_t thedso,
<a name="l00464"></a>00464                                                 <a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *pool);
<a name="l00465"></a>00465 <span class="comment"></span>
<a name="l00466"></a>00466 <span class="comment">/**</span>
<a name="l00467"></a>00467 <span class="comment"> * convert the apr dso handle into an os specific one</span>
<a name="l00468"></a>00468 <span class="comment"> * @param aprdso The apr dso handle to convert</span>
<a name="l00469"></a>00469 <span class="comment"> * @param dso The os specific dso to return</span>
<a name="l00470"></a>00470 <span class="comment"> */</span>
<a name="l00471"></a>00471 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__os__dso.html#ga35f9c50b7e546d0c33985442a9c4aa6e">apr_os_dso_handle_get</a>(apr_os_dso_handle_t *dso,
<a name="l00472"></a>00472                                                 <a class="code" href="group__apr__dso.html#ga85e7e28490d026aeed78bd78e9933472">apr_dso_handle_t</a> *aprdso);
<a name="l00473"></a>00473 
<a name="l00474"></a>00474 <span class="preprocessor">#if APR_HAS_OS_UUID</span>
<a name="l00475"></a>00475 <span class="preprocessor"></span><span class="comment">/**</span>
<a name="l00476"></a>00476 <span class="comment"> * Private: apr-util&#39;s apr_uuid module when supported by the platform</span>
<a name="l00477"></a>00477 <span class="comment"> */</span>
<a name="l00478"></a>00478 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) apr_os_uuid_get(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *uuid_data);
<a name="l00479"></a>00479 <span class="preprocessor">#endif</span>
<a name="l00480"></a>00480 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00481"></a>00481 <span class="comment">/** @} */</span>
<a name="l00482"></a>00482 <span class="preprocessor">#endif </span><span class="comment">/* APR_HAS_DSO */</span>
<a name="l00483"></a>00483 
<a name="l00484"></a>00484 <span class="comment"></span>
<a name="l00485"></a>00485 <span class="comment">/**</span>
<a name="l00486"></a>00486 <span class="comment"> * Get the name of the system default characer set.</span>
<a name="l00487"></a>00487 <span class="comment"> * @param pool the pool to allocate the name from, if needed</span>
<a name="l00488"></a>00488 <span class="comment"> */</span>
<a name="l00489"></a>00489 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*) <a class="code" href="group__apr__portabile.html#ga6e21845a4a5f3b7dd107b2beea50c91e">apr_os_default_encoding</a>(<a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *pool);
<a name="l00490"></a>00490 
<a name="l00491"></a>00491 <span class="comment"></span>
<a name="l00492"></a>00492 <span class="comment">/**</span>
<a name="l00493"></a>00493 <span class="comment"> * Get the name of the current locale character set.</span>
<a name="l00494"></a>00494 <span class="comment"> * @param pool the pool to allocate the name from, if needed</span>
<a name="l00495"></a>00495 <span class="comment"> * @remark Defers to apr_os_default_encoding if the current locale&#39;s</span>
<a name="l00496"></a>00496 <span class="comment"> * data can&#39;t be retreved on this system.</span>
<a name="l00497"></a>00497 <span class="comment"> */</span>
<a name="l00498"></a>00498 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(const <span class="keywordtype">char</span>*) <a class="code" href="group__apr__portabile.html#gaf4c49baaf6cb115c6c92e74e4a40fd46">apr_os_locale_encoding</a>(<a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *pool);
<a name="l00499"></a>00499 <span class="comment"></span>
<a name="l00500"></a>00500 <span class="comment">/** @} */</span>
<a name="l00501"></a>00501 
<a name="l00502"></a>00502 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00503"></a>00503 <span class="preprocessor"></span>}
<a name="l00504"></a>00504 <span class="preprocessor">#endif</span>
<a name="l00505"></a>00505 <span class="preprocessor"></span>
<a name="l00506"></a>00506 <span class="preprocessor">#endif  </span><span class="comment">/* ! APR_PORTABLE_H */</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Mon May 23 21:31:32 2011 for Apache Portable Runtime by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
