<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Apache Portable Runtime: apr_time.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<h1>apr_time.h</h1><a href="apr__time_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* Licensed to the Apache Software Foundation (ASF) under one or more</span>
<a name="l00002"></a>00002 <span class="comment"> * contributor license agreements.  See the NOTICE file distributed with</span>
<a name="l00003"></a>00003 <span class="comment"> * this work for additional information regarding copyright ownership.</span>
<a name="l00004"></a>00004 <span class="comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span>
<a name="l00005"></a>00005 <span class="comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span>
<a name="l00006"></a>00006 <span class="comment"> * the License.  You may obtain a copy of the License at</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00009"></a>00009 <span class="comment"> *</span>
<a name="l00010"></a>00010 <span class="comment"> * Unless required by applicable law or agreed to in writing, software</span>
<a name="l00011"></a>00011 <span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00013"></a>00013 <span class="comment"> * See the License for the specific language governing permissions and</span>
<a name="l00014"></a>00014 <span class="comment"> * limitations under the License.</span>
<a name="l00015"></a>00015 <span class="comment"> */</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="preprocessor">#ifndef APR_TIME_H</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span><span class="preprocessor">#define APR_TIME_H</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00020"></a>00020 <span class="comment">/**</span>
<a name="l00021"></a>00021 <span class="comment"> * @file apr_time.h</span>
<a name="l00022"></a>00022 <span class="comment"> * @brief APR Time Library</span>
<a name="l00023"></a>00023 <span class="comment"> */</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="apr_8h.html" title="APR Platform Definitions.">apr.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="apr__pools_8h.html" title="APR memory allocation.">apr_pools.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="apr__errno_8h.html" title="APR Error Codes.">apr_errno.h</a>&quot;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00030"></a>00030 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {
<a name="l00031"></a>00031 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l00032"></a>00032 <span class="comment"></span>
<a name="l00033"></a>00033 <span class="comment">/**</span>
<a name="l00034"></a>00034 <span class="comment"> * @defgroup apr_time Time Routines</span>
<a name="l00035"></a>00035 <span class="comment"> * @ingroup APR </span>
<a name="l00036"></a>00036 <span class="comment"> * @{</span>
<a name="l00037"></a>00037 <span class="comment"> */</span>
<a name="l00038"></a>00038 <span class="comment"></span>
<a name="l00039"></a>00039 <span class="comment">/** month names */</span>
<a name="l00040"></a>00040 <a class="code" href="group__apr__platform.html#ga16a1a3d65c57ce052fffb63190b1cadc">APR_DECLARE_DATA</a> <span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">char</span> <a class="code" href="group__apr__time.html#ga77382d017a2bef80d44478e0b41557a4">apr_month_snames</a>[12][4];<span class="comment"></span>
<a name="l00041"></a>00041 <span class="comment">/** day names */</span>
<a name="l00042"></a>00042 <a class="code" href="group__apr__platform.html#ga16a1a3d65c57ce052fffb63190b1cadc">APR_DECLARE_DATA</a> <span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">char</span> <a class="code" href="group__apr__time.html#ga37d6f7740ae0f5d8ae9cfc286e8712be">apr_day_snames</a>[7][4];
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="comment"></span>
<a name="l00045"></a>00045 <span class="comment">/** number of microseconds since 00:00:00 january 1, 1970 UTC */</span>
<a name="l00046"></a><a class="code" href="group__apr__time.html#gadb4bde16055748190eae190c55aa02bb">00046</a> <span class="keyword">typedef</span> apr_int64_t <a class="code" href="group__apr__time.html#gadb4bde16055748190eae190c55aa02bb">apr_time_t</a>;
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="comment"></span>
<a name="l00049"></a>00049 <span class="comment">/** mechanism to properly type apr_time_t literals */</span>
<a name="l00050"></a><a class="code" href="group__apr__time.html#gab0d08005432bbda78e03bcd2e235e7d3">00050</a> <span class="preprocessor">#define APR_TIME_C(val) APR_INT64_C(val)</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00052"></a>00052 <span class="comment">/** mechanism to properly print apr_time_t values */</span>
<a name="l00053"></a><a class="code" href="group__apr__time.html#gaad2d372b64a68d96b1e4c5f1173eb2c7">00053</a> <span class="preprocessor">#define APR_TIME_T_FMT APR_INT64_T_FMT</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00055"></a>00055 <span class="comment">/** intervals for I/O timeouts, in microseconds */</span>
<a name="l00056"></a><a class="code" href="group__apr__time.html#gaae2129185a395cc393f76fabf4f43e47">00056</a> <span class="keyword">typedef</span> apr_int64_t <a class="code" href="group__apr__time.html#gaae2129185a395cc393f76fabf4f43e47">apr_interval_time_t</a>;<span class="comment"></span>
<a name="l00057"></a>00057 <span class="comment">/** short interval for I/O timeouts, in microseconds */</span>
<a name="l00058"></a><a class="code" href="group__apr__time.html#ga3e4663cc0d8b730902ff697c8d3f64be">00058</a> <span class="keyword">typedef</span> apr_int32_t <a class="code" href="group__apr__time.html#ga3e4663cc0d8b730902ff697c8d3f64be">apr_short_interval_time_t</a>;
<a name="l00059"></a>00059 <span class="comment"></span>
<a name="l00060"></a>00060 <span class="comment">/** number of microseconds per second */</span>
<a name="l00061"></a><a class="code" href="group__apr__time.html#gab4dd3f3015d25a50f3be3e0e91043abf">00061</a> <span class="preprocessor">#define APR_USEC_PER_SEC APR_TIME_C(1000000)</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00063"></a>00063 <span class="comment">/** @return apr_time_t as a second */</span>
<a name="l00064"></a><a class="code" href="group__apr__time.html#gae0237f70a9a3206b5263c0a474219476">00064</a> <span class="preprocessor">#define apr_time_sec(time) ((time) / APR_USEC_PER_SEC)</span>
<a name="l00065"></a>00065 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00066"></a>00066 <span class="comment">/** @return apr_time_t as a usec */</span>
<a name="l00067"></a><a class="code" href="group__apr__time.html#gae842c7b471ccf0dc691eb2ff3cc8fc8e">00067</a> <span class="preprocessor">#define apr_time_usec(time) ((time) % APR_USEC_PER_SEC)</span>
<a name="l00068"></a>00068 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00069"></a>00069 <span class="comment">/** @return apr_time_t as a msec */</span>
<a name="l00070"></a><a class="code" href="group__apr__time.html#ga05d6c6ea507b74605aa2149a4410076f">00070</a> <span class="preprocessor">#define apr_time_msec(time) (((time) / 1000) % 1000)</span>
<a name="l00071"></a>00071 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00072"></a>00072 <span class="comment">/** @return apr_time_t as a msec */</span>
<a name="l00073"></a><a class="code" href="group__apr__time.html#ga0ab989e84c18e63d36e653aab2821691">00073</a> <span class="preprocessor">#define apr_time_as_msec(time) ((time) / 1000)</span>
<a name="l00074"></a>00074 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00075"></a>00075 <span class="comment">/** @return a second as an apr_time_t */</span>
<a name="l00076"></a><a class="code" href="group__apr__time.html#gaec56c2c03299a750006bfcc08d64ec32">00076</a> <span class="preprocessor">#define apr_time_from_sec(sec) ((apr_time_t)(sec) * APR_USEC_PER_SEC)</span>
<a name="l00077"></a>00077 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00078"></a>00078 <span class="comment">/** @return a second and usec combination as an apr_time_t */</span>
<a name="l00079"></a><a class="code" href="group__apr__time.html#ga47e8d04826e56b6ce39ed082d33abc38">00079</a> <span class="preprocessor">#define apr_time_make(sec, usec) ((apr_time_t)(sec) * APR_USEC_PER_SEC \</span>
<a name="l00080"></a>00080 <span class="preprocessor">                                + (apr_time_t)(usec))</span>
<a name="l00081"></a>00081 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00082"></a>00082 <span class="comment">/**</span>
<a name="l00083"></a>00083 <span class="comment"> * @return the current time</span>
<a name="l00084"></a>00084 <span class="comment"> */</span>
<a name="l00085"></a>00085 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(apr_time_t) <a class="code" href="group__apr__time.html#gac5cb8713d0681d7b809169a222512287">apr_time_now</a>(<span class="keywordtype">void</span>);
<a name="l00086"></a>00086 <span class="comment"></span>
<a name="l00087"></a>00087 <span class="comment">/** @see apr_time_exp_t */</span>
<a name="l00088"></a><a class="code" href="group__apr__time.html#gae28f2767111a534f263ced95a28489b1">00088</a> typedef struct <a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> <a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a>;
<a name="l00089"></a>00089 <span class="comment"></span>
<a name="l00090"></a>00090 <span class="comment">/**</span>
<a name="l00091"></a>00091 <span class="comment"> * a structure similar to ANSI struct tm with the following differences:</span>
<a name="l00092"></a>00092 <span class="comment"> *  - tm_usec isn&#39;t an ANSI field</span>
<a name="l00093"></a>00093 <span class="comment"> *  - tm_gmtoff isn&#39;t an ANSI field (it&#39;s a bsdism)</span>
<a name="l00094"></a>00094 <span class="comment"> */</span>
<a name="l00095"></a><a class="code" href="structapr__time__exp__t.html">00095</a> struct apr_time_exp_t {<span class="comment"></span>
<a name="l00096"></a>00096 <span class="comment">    /** microseconds past tm_sec */</span>
<a name="l00097"></a><a class="code" href="structapr__time__exp__t.html#ac5f11e3c1f5a30d357df2108296a8d30">00097</a>     apr_int32_t tm_usec;<span class="comment"></span>
<a name="l00098"></a>00098 <span class="comment">    /** (0-61) seconds past tm_min */</span>
<a name="l00099"></a><a class="code" href="structapr__time__exp__t.html#a2c29c99a75b55237917cb05ebae6706c">00099</a>     apr_int32_t tm_sec;<span class="comment"></span>
<a name="l00100"></a>00100 <span class="comment">    /** (0-59) minutes past tm_hour */</span>
<a name="l00101"></a><a class="code" href="structapr__time__exp__t.html#a56a380db482ba5b2bef43351faad27fb">00101</a>     apr_int32_t tm_min;<span class="comment"></span>
<a name="l00102"></a>00102 <span class="comment">    /** (0-23) hours past midnight */</span>
<a name="l00103"></a><a class="code" href="structapr__time__exp__t.html#a2dbab1d10ed6234c8e9e714e13b7911c">00103</a>     apr_int32_t tm_hour;<span class="comment"></span>
<a name="l00104"></a>00104 <span class="comment">    /** (1-31) day of the month */</span>
<a name="l00105"></a><a class="code" href="structapr__time__exp__t.html#a6c09a274f011841e9e988c3c9504848a">00105</a>     apr_int32_t tm_mday;<span class="comment"></span>
<a name="l00106"></a>00106 <span class="comment">    /** (0-11) month of the year */</span>
<a name="l00107"></a><a class="code" href="structapr__time__exp__t.html#a746f38956dfeb6be3bd17282791e3577">00107</a>     apr_int32_t tm_mon;<span class="comment"></span>
<a name="l00108"></a>00108 <span class="comment">    /** year since 1900 */</span>
<a name="l00109"></a><a class="code" href="structapr__time__exp__t.html#a35c32245be49279a6689e34bcd6e534a">00109</a>     apr_int32_t tm_year;<span class="comment"></span>
<a name="l00110"></a>00110 <span class="comment">    /** (0-6) days since sunday */</span>
<a name="l00111"></a><a class="code" href="structapr__time__exp__t.html#a57e892bbf3c52df34dcff2c6a9f1adbf">00111</a>     apr_int32_t tm_wday;<span class="comment"></span>
<a name="l00112"></a>00112 <span class="comment">    /** (0-365) days since jan 1 */</span>
<a name="l00113"></a><a class="code" href="structapr__time__exp__t.html#aa15c7ab0d7e2a974e89cc1470f1583ab">00113</a>     apr_int32_t tm_yday;<span class="comment"></span>
<a name="l00114"></a>00114 <span class="comment">    /** daylight saving time */</span>
<a name="l00115"></a><a class="code" href="structapr__time__exp__t.html#a4d899f1fb9fde3c6b6893941fa81b1c8">00115</a>     apr_int32_t tm_isdst;<span class="comment"></span>
<a name="l00116"></a>00116 <span class="comment">    /** seconds east of UTC */</span>
<a name="l00117"></a><a class="code" href="structapr__time__exp__t.html#a1102ca16ed70b1c707473431eed58d7b">00117</a>     apr_int32_t tm_gmtoff;
<a name="l00118"></a>00118 };
<a name="l00119"></a>00119 <span class="comment"></span>
<a name="l00120"></a>00120 <span class="comment">/**</span>
<a name="l00121"></a>00121 <span class="comment"> * convert an ansi time_t to an apr_time_t</span>
<a name="l00122"></a>00122 <span class="comment"> * @param result the resulting apr_time_t</span>
<a name="l00123"></a>00123 <span class="comment"> * @param input the time_t to convert</span>
<a name="l00124"></a>00124 <span class="comment"> */</span>
<a name="l00125"></a>00125 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#gac2fec71f18b4a286b2e21f0b74fadce8">apr_time_ansi_put</a>(apr_time_t *result, 
<a name="l00126"></a>00126                                                     time_t input);
<a name="l00127"></a>00127 <span class="comment"></span>
<a name="l00128"></a>00128 <span class="comment">/**</span>
<a name="l00129"></a>00129 <span class="comment"> * convert a time to its human readable components using an offset</span>
<a name="l00130"></a>00130 <span class="comment"> * from GMT</span>
<a name="l00131"></a>00131 <span class="comment"> * @param result the exploded time</span>
<a name="l00132"></a>00132 <span class="comment"> * @param input the time to explode</span>
<a name="l00133"></a>00133 <span class="comment"> * @param offs the number of seconds offset to apply</span>
<a name="l00134"></a>00134 <span class="comment"> */</span>
<a name="l00135"></a>00135 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#gaaf3b8ba123feaa0af5a5975b9a8ab8b1">apr_time_exp_tz</a>(<a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *result,
<a name="l00136"></a>00136                                           apr_time_t input,
<a name="l00137"></a>00137                                           apr_int32_t offs);
<a name="l00138"></a>00138 <span class="comment"></span>
<a name="l00139"></a>00139 <span class="comment">/**</span>
<a name="l00140"></a>00140 <span class="comment"> * convert a time to its human readable components in GMT timezone</span>
<a name="l00141"></a>00141 <span class="comment"> * @param result the exploded time</span>
<a name="l00142"></a>00142 <span class="comment"> * @param input the time to explode</span>
<a name="l00143"></a>00143 <span class="comment"> */</span>
<a name="l00144"></a>00144 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#gafa8bdd3a4500f66866d8dd54bf69fb71">apr_time_exp_gmt</a>(<a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *result, 
<a name="l00145"></a>00145                                            apr_time_t input);
<a name="l00146"></a>00146 <span class="comment"></span>
<a name="l00147"></a>00147 <span class="comment">/**</span>
<a name="l00148"></a>00148 <span class="comment"> * convert a time to its human readable components in local timezone</span>
<a name="l00149"></a>00149 <span class="comment"> * @param result the exploded time</span>
<a name="l00150"></a>00150 <span class="comment"> * @param input the time to explode</span>
<a name="l00151"></a>00151 <span class="comment"> */</span>
<a name="l00152"></a>00152 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#ga34d3b9858de1d3111a4b2ff936ada7f6">apr_time_exp_lt</a>(<a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *result, 
<a name="l00153"></a>00153                                           apr_time_t input);
<a name="l00154"></a>00154 <span class="comment"></span>
<a name="l00155"></a>00155 <span class="comment">/**</span>
<a name="l00156"></a>00156 <span class="comment"> * Convert time value from human readable format to a numeric apr_time_t </span>
<a name="l00157"></a>00157 <span class="comment"> * e.g. elapsed usec since epoch</span>
<a name="l00158"></a>00158 <span class="comment"> * @param result the resulting imploded time</span>
<a name="l00159"></a>00159 <span class="comment"> * @param input the input exploded time</span>
<a name="l00160"></a>00160 <span class="comment"> */</span>
<a name="l00161"></a>00161 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#gac13166685922464d9848bda469e0b3b7">apr_time_exp_get</a>(apr_time_t *result, 
<a name="l00162"></a>00162                                            <a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *input);
<a name="l00163"></a>00163 <span class="comment"></span>
<a name="l00164"></a>00164 <span class="comment">/**</span>
<a name="l00165"></a>00165 <span class="comment"> * Convert time value from human readable format to a numeric apr_time_t that</span>
<a name="l00166"></a>00166 <span class="comment"> * always represents GMT</span>
<a name="l00167"></a>00167 <span class="comment"> * @param result the resulting imploded time</span>
<a name="l00168"></a>00168 <span class="comment"> * @param input the input exploded time</span>
<a name="l00169"></a>00169 <span class="comment"> */</span>
<a name="l00170"></a>00170 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#ga0f9fdeae48a45662cb3f198d06c743f0">apr_time_exp_gmt_get</a>(apr_time_t *result, 
<a name="l00171"></a>00171                                                <a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *input);
<a name="l00172"></a>00172 <span class="comment"></span>
<a name="l00173"></a>00173 <span class="comment">/**</span>
<a name="l00174"></a>00174 <span class="comment"> * Sleep for the specified number of micro-seconds.</span>
<a name="l00175"></a>00175 <span class="comment"> * @param t desired amount of time to sleep.</span>
<a name="l00176"></a>00176 <span class="comment"> * @warning May sleep for longer than the specified time. </span>
<a name="l00177"></a>00177 <span class="comment"> */</span>
<a name="l00178"></a>00178 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<span class="keywordtype">void</span>) <a class="code" href="group__apr__time.html#ga8ffddc239a3d8051d9972cee080fd761">apr_sleep</a>(apr_interval_time_t t);
<a name="l00179"></a>00179 <span class="comment"></span>
<a name="l00180"></a>00180 <span class="comment">/** length of a RFC822 Date */</span>
<a name="l00181"></a><a class="code" href="group__apr__time.html#ga33933cf7a3e3c2cf6082c5f6d22ca3e5">00181</a> <span class="preprocessor">#define APR_RFC822_DATE_LEN (30)</span>
<a name="l00182"></a>00182 <span class="preprocessor"></span><span class="comment">/**</span>
<a name="l00183"></a>00183 <span class="comment"> * apr_rfc822_date formats dates in the RFC822</span>
<a name="l00184"></a>00184 <span class="comment"> * format in an efficient manner.  It is a fixed length</span>
<a name="l00185"></a>00185 <span class="comment"> * format which requires the indicated amount of storage,</span>
<a name="l00186"></a>00186 <span class="comment"> * including the trailing NUL terminator.</span>
<a name="l00187"></a>00187 <span class="comment"> * @param date_str String to write to.</span>
<a name="l00188"></a>00188 <span class="comment"> * @param t the time to convert </span>
<a name="l00189"></a>00189 <span class="comment"> */</span>
<a name="l00190"></a>00190 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#gad77b323dd4402ac89c51240f19015df5">apr_rfc822_date</a>(<span class="keywordtype">char</span> *date_str, apr_time_t t);
<a name="l00191"></a>00191 <span class="comment"></span>
<a name="l00192"></a>00192 <span class="comment">/** length of a CTIME date */</span>
<a name="l00193"></a><a class="code" href="group__apr__time.html#ga0bd804145d3954f45a6962e9dd10f220">00193</a> <span class="preprocessor">#define APR_CTIME_LEN (25)</span>
<a name="l00194"></a>00194 <span class="preprocessor"></span><span class="comment">/**</span>
<a name="l00195"></a>00195 <span class="comment"> * apr_ctime formats dates in the ctime() format</span>
<a name="l00196"></a>00196 <span class="comment"> * in an efficient manner.  it is a fixed length format</span>
<a name="l00197"></a>00197 <span class="comment"> * and requires the indicated amount of storage including</span>
<a name="l00198"></a>00198 <span class="comment"> * the trailing NUL terminator.</span>
<a name="l00199"></a>00199 <span class="comment"> * Unlike ANSI/ISO C ctime(), apr_ctime() does not include</span>
<a name="l00200"></a>00200 <span class="comment"> * a \n at the end of the string.</span>
<a name="l00201"></a>00201 <span class="comment"> * @param date_str String to write to.</span>
<a name="l00202"></a>00202 <span class="comment"> * @param t the time to convert </span>
<a name="l00203"></a>00203 <span class="comment"> */</span>
<a name="l00204"></a>00204 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#gad1fcb8f26d508fbb34ea2beca7bc851e">apr_ctime</a>(<span class="keywordtype">char</span> *date_str, apr_time_t t);
<a name="l00205"></a>00205 <span class="comment"></span>
<a name="l00206"></a>00206 <span class="comment">/**</span>
<a name="l00207"></a>00207 <span class="comment"> * formats the exploded time according to the format specified</span>
<a name="l00208"></a>00208 <span class="comment"> * @param s string to write to</span>
<a name="l00209"></a>00209 <span class="comment"> * @param retsize The length of the returned string</span>
<a name="l00210"></a>00210 <span class="comment"> * @param max The maximum length of the string</span>
<a name="l00211"></a>00211 <span class="comment"> * @param format The format for the time string</span>
<a name="l00212"></a>00212 <span class="comment"> * @param tm The time to convert</span>
<a name="l00213"></a>00213 <span class="comment"> */</span>
<a name="l00214"></a>00214 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<a class="code" href="group__apr__errno.html#gaf76ee4543247e9fb3f3546203e590a6c">apr_status_t</a>) <a class="code" href="group__apr__time.html#ga3f5e1aa45e735f3bcf8c13fb718c214f">apr_strftime</a>(<span class="keywordtype">char</span> *s, apr_size_t *retsize, 
<a name="l00215"></a>00215                                        apr_size_t max, const <span class="keywordtype">char</span> *format, 
<a name="l00216"></a>00216                                        <a class="code" href="structapr__time__exp__t.html">apr_time_exp_t</a> *tm);
<a name="l00217"></a>00217 <span class="comment"></span>
<a name="l00218"></a>00218 <span class="comment">/**</span>
<a name="l00219"></a>00219 <span class="comment"> * Improve the clock resolution for the lifetime of the given pool.</span>
<a name="l00220"></a>00220 <span class="comment"> * Generally this is only desireable on benchmarking and other very</span>
<a name="l00221"></a>00221 <span class="comment"> * time-sensitive applications, and has no impact on most platforms.</span>
<a name="l00222"></a>00222 <span class="comment"> * @param p The pool to associate the finer clock resolution </span>
<a name="l00223"></a>00223 <span class="comment"> */</span>
<a name="l00224"></a>00224 <a class="code" href="group__apr__platform.html#gad7b91b811a172bfa802603c2fb688f98">APR_DECLARE</a>(<span class="keywordtype">void</span>) <a class="code" href="group__apr__time.html#gac47e0b54f17857f0ce2925b2930b5500">apr_time_clock_hires</a>(<a class="code" href="group__apr__pools.html#gaf137f28edcf9a086cd6bc36c20d7cdfb">apr_pool_t</a> *p);
<a name="l00225"></a>00225 <span class="comment"></span>
<a name="l00226"></a>00226 <span class="comment">/** @} */</span>
<a name="l00227"></a>00227 
<a name="l00228"></a>00228 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00229"></a>00229 <span class="preprocessor"></span>}
<a name="l00230"></a>00230 <span class="preprocessor">#endif</span>
<a name="l00231"></a>00231 <span class="preprocessor"></span>
<a name="l00232"></a>00232 <span class="preprocessor">#endif  </span><span class="comment">/* ! APR_TIME_H */</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Mon May 23 21:31:32 2011 for Apache Portable Runtime by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
